import random

import service
phrases = [
    "–î–æ–∫–∞–∂–∏—Ç–µ —Å–≤–æ–∏ —Å–ª–æ–≤–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–≤ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ.",
    "–ù–µ –≤–∏–∂—É —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –≤–∞—à—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...",
    "–ù–µ –≤–µ—Ä—é. –ì–¥–µ –≤–∞—à–∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞?",
    "–ù–µ –º–æ–≥—É –ø—Ä–∏–Ω—è—Ç—å —ç—Ç–æ –Ω–∞ –≤–µ—Ä—É –±–µ–∑ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤.",
    "–ü–æ–∫–∞–∂–∏—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –∏–Ω–∞—á–µ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Å–ª–æ–≤–∞.",
    "–° —á–µ–≥–æ –º–Ω–µ –≤–µ—Ä–∏—Ç—å –≤–∞–º –±–µ–∑ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤?",
    "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à–∏ —Å–ª–æ–≤–∞?",
    "–Ø —Å–æ–º–Ω–µ–≤–∞—é—Å—å –≤ —ç—Ç–æ–º.",
    "–ó–≤—É—á–∏—Ç –Ω–µ–ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω–æ.",
    "–ú–Ω–µ –Ω—É–∂–Ω–æ —Ö–æ—Ç—å —á—Ç–æ-—Ç–æ, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–∞–≤–¥–∏–≤–æ—Å—Ç–∏ –≤–∞—à–∏—Ö —Å–ª–æ–≤."
]

def check_message(text: str, hashtags: list, content_type: str, username: str, user_id: int):
    """
    Checks message for content
    :param text: message text
    :param hashtags: list of hashtags
    :param content_type: message content type (photo, video etc)
    :param username: username in format @username
    :return: [0, "–ù–µ –≤–µ—Ä—é. –ì–¥–µ –≤–∞—à–∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞?", hashtag] - if right hashtag without photo/video
            [1, "üëç", hashtag] - if right hashtag with right photo
            [2, None, None] - if there is no hashtags from the list in messsage
    """
    for hashtag in hashtags:
        if hashtag in text.lower().split():
            if content_type == "text":
                # TODO —Å–¥–µ–ª–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
                service.log_write(f'-- Failed to update database - no picture with hashtag from @{username} ID {user_id}')
                return [0, random.choice(phrases), hashtag]
            else:
                return [1, "üëç", hashtag]
    return [2, None, None]
