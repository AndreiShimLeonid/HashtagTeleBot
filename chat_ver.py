import telebot
import sqlite3
import datetime


def read_token_from_file():
    with open('token', 'r') as file:
        # –ß—Ç–µ–Ω–∏–µ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞
        return file.readline()


bot = telebot.TeleBot(read_token_from_file())


def create_table():
    conn = sqlite3.connect('hashtag_stats.db', check_same_thread=False)
    cursor = conn.cursor()
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS hashtag_stats (
        user_id INTEGER,
        username TEXT,
        year INTEGER,
        month TEXT,
        hashtag TEXT,
        count INTEGER,
        PRIMARY KEY (user_id, year, month, hashtag)
    )
    ''')
    conn.commit()
    cursor.close()
    conn.close()


# –•–µ—à—Ç–µ–≥–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
TRACKED_HASHTAGS = ['#–¥–æ–±—Ä—ã–π', '#–Ω–µ–¥–æ–±—Ä—ã–π']

if __name__ == '__chat_ver__':
    create_table()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def update_stats(user_id, username, year, month, hashtag):
    conn = sqlite3.connect('hashtag_stats.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute('''
    INSERT INTO hashtag_stats (user_id, username, year, month, hashtag, count)
    VALUES (?, ?, ?, ?, ?, ?)
    ON CONFLICT(user_id, year, month, hashtag)
    DO UPDATE SET count = count + 1
    ''', (user_id, username, year, month, hashtag, 1))
    conn.commit()
    cursor.close()
    conn.close()


@bot.message_handler(commands=['stats'])
def send_stats(message):
    user_id = message.from_user.id
    username = message.from_user.username
    conn = sqlite3.connect('hashtag_stats.db', check_same_thread=False)
    cursor = conn.cursor()
    cursor.execute('''
    SELECT year, month, hashtag, count FROM hashtag_stats
    WHERE user_id = ?
    ''', (user_id,))

    rows = cursor.fetchall()

    if not rows:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ö–µ—à—Ç–µ–≥–æ–≤.")
        return

    response = f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username}:\n"

    stats = {}
    for row in rows:
        year, month, hashtag, count = row
        if year not in stats:
            stats[year] = {}
        if month not in stats[year]:
            stats[year][month] = {}
        stats[year][month][hashtag] = count

    for year in sorted(stats.keys()):
        response += f"\n{year}:\n"
        for month in sorted(stats[year].keys()):
            response += f"  {month}:\n"
            for hashtag, count in stats[year][month].items():
                response += f"    {hashtag}: {count}\n"

    bot.reply_to(message, response)
    cursor.close()
    conn.close()
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π


@bot.message_handler(func=lambda message: True, content_types=['text', 'photo', 'video', 'document'])
def handle_message(message):
    user_id = message.from_user.id
    username = message.from_user.username
    text = message.text
    if text == None:
        text = message.caption
    date = message.date
    # dt = datetime.utcfromtimestamp(date)
    dt = datetime.datetime.fromtimestamp(date)
    year = dt.year
    month = dt.strftime('%B')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ö–µ—à—Ç–µ–≥–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    for hashtag in TRACKED_HASHTAGS:
        if hashtag in text.split():
            if message.content_type == "text":
                bot.reply_to(message, "–ù–µ –≤–µ—Ä—é. –ì–¥–µ –≤–∞—à–∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞?")
                # TODO —Å–¥–µ–ª–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
                print(datetime.datetime.now(),
                      f'-- Failed to update database - no picture with hashtag from @{username}')
            else:
                update_stats(user_id, username, year, month, hashtag)
                bot.reply_to(message, "üëç")
                print(datetime.datetime.now(), f'-- DB is updated - visual content with hashtag from @{username}')


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(non_stop=True)
